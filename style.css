// GSAP va ScrollTrigger'ni ro'yxatdan o'tkazish
gsap.registerPlugin(ScrollTrigger);

// Sahna (Scene) yaratish
const scene = new THREE.Scene();

// Kamera yaratish
const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
camera.position.z = 20;

// Renderchi (Renderer) yaratish
const renderer = new THREE.WebGLRenderer({
    canvas: document.querySelector('#bg'),
    alpha: true // Fonni shaffof qilish uchun
});
renderer.setSize(window.innerWidth, window.innerHeight);
renderer.setPixelRatio(window.devicePixelRatio);

// Geometriya va Materiallar
// 1. Asosiy Sfera
const geometry = new THREE.SphereGeometry(10, 64, 64);
const material = new THREE.MeshStandardMaterial({
    color: 0xbb86fc,
    wireframe: true,
    metalness: 0.7,
    roughness: 0.4
});
const sphere = new THREE.Mesh(geometry, material);
scene.add(sphere);

// 2. Kichik zarrachalar (Yulduzlar)
const starGeometry = new THREE.BufferGeometry();
const starCount = 5000;
const posArray = new Float32Array(starCount * 3);
for (let i = 0; i < starCount * 3; i++) {
    posArray[i] = (Math.random() - 0.5) * 1000;
}
starGeometry.setAttribute('position', new THREE.BufferAttribute(posArray, 3));
const starMaterial = new THREE.PointsMaterial({
    size: 0.1,
    color: 0xffffff
});
const starMesh = new THREE.Points(starGeometry, starMaterial);
scene.add(starMesh);


// Yorug'lik
const pointLight = new THREE.PointLight(0xffffff, 1.5);
pointLight.position.set(20, 20, 20);
const ambientLight = new THREE.AmbientLight(0xffffff, 0.1);
scene.add(pointLight, ambientLight);


// Sichqoncha harakatini kuzatish
let mouseX = 0;
let mouseY = 0;
document.addEventListener('mousemove', (event) => {
    mouseX = (event.clientX / window.innerWidth) * 2 - 1;
    mouseY = -(event.clientY / window.innerHeight) * 2 + 1;
});

// Animatsiya tsikli
function animate() {
    requestAnimationFrame(animate);

    // Ob'ektlarni aylantirish
    sphere.rotation.y += 0.001;
    sphere.rotation.x += 0.0005;
    starMesh.rotation.y += 0.0002;

    // Sichqoncha harakatiga qarab kamerani siljitish
    camera.position.x += (mouseX * 5 - camera.position.x) * 0.05;
    camera.position.y += (mouseY * 5 - camera.position.y) * 0.05;
    camera.lookAt(scene.position);


    renderer.render(scene, camera);
}
animate();


// Scroll animatsiyalari (GSAP yordamida)
// 1. Asosiy sfera animatsiyasi
gsap.to(sphere.scale, {
    x: 1.5,
    y: 1.5,
    z: 1.5,
    scrollTrigger: {
        trigger: "main",
        start: "top top",
        end: "bottom bottom",
        scrub: 1
    }
});

// 2. Kontent bo'limlarini paydo bo'lishi
const sections = document.querySelectorAll('.content-section');
sections.forEach(section => {
    gsap.to(section, {
        scrollTrigger: {
            trigger: section,
            start: "top 80%",
            onEnter: () => section.classList.add('visible')
        }
    });
});


// Oyna o'lchami o'zgarganda kamerani moslashtirish
window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
});
